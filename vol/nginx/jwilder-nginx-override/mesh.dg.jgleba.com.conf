

# x.dg.jgleba~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#   # mesh
#   upstream me.d.jgleba.com {
#           ## Can be connected with "sister" network
# 			# listo429c_me_1
# 			# server 172.21.0.16:8083;
# 			server 172.27.0.30:6219;
#   }
#   server {
#     server_name me.d.jgleba.com;
#     listen 80 ;
#     access_log /var/log/nginx/access.log vhost;
#     # Do not HTTPS redirect LetsEncrypt ACME challenge
#     location /.well-known/acme-challenge/ {
#       auth_basic off;
#       allow all;
#       root /usr/share/nginx/html;
#       try_files $uri =404;
#       break;
#     }
#     location / {
#       return 301 https://$host$request_uri;
#     }
#   }
#   server {
#     server_name me.d.jgleba.com;
#     listen 443 ssl http2 ;
#     access_log /var/log/nginx/access.log vhost;
#     ssl_session_timeout 5m;
#     ssl_session_cache shared:SSL:50m;
#     ssl_session_tickets off;
#     ssl_certificate /etc/nginx/certs/me.d.jgleba.com.crt;
#     ssl_certificate_key /etc/nginx/certs/me.d.jgleba.com.key;
#     ssl_dhparam /etc/nginx/certs/me.d.jgleba.com.dhparam.pem;
#     ssl_stapling on;
#     ssl_stapling_verify on;
#     ssl_trusted_certificate /etc/nginx/certs/me.d.jgleba.com.chain.pem;
#     add_header Strict-Transport-Security "max-age=31536000" always;
#     include /etc/nginx/vhost.d/default;
#     location / {
#       proxy_pass http://me.d.jgleba.com;
#     }
#   }

# end. x.dg.jgleba~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# mesh.dg.jgleba~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

upstream mesh.dg.jgleba.com {
        ## Can be connected with "sister" network
        # listo429c_me_1
        # server 172.21.0.16:8083;
        server 192.168.88.60:14800;
}

server {
    listen 80;
    server_name mesh.dg.jgleba.com;

    access_log /var/log/nginx/access.log vhost;
    # Do not HTTPS redirect LetsEncrypt ACME challenge
    location /.well-known/acme-challenge/ {
      auth_basic off;
      allow all;
      root /usr/share/nginx/html;
      try_files $uri =404;
      break;
    }
        location / {
        proxy_pass http://192.168.88.60:14800/;
        proxy_http_version 1.1;

        # Inform MeshCentral about the real host, port and protocol
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTPS server. In this example, we use a wildcard as server name. server_name _;

    server {
    listen 443 ssl;
    server_name mesh.dg.jgleba.com;
    # MeshCentral uses long standing web socket connections, set longer timeouts.
    proxy_send_timeout 330s;
    proxy_read_timeout 330s;
    # We can use the MeshCentral generated certificate & key
    # ssl_certificate webserver-cert-public.crt;
    # ssl_certificate_key webserver-cert-private.key;
    # ssl_session_cache shared:WEBSSL:10m;

    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

        location / {
        proxy_pass http://mesh.dg.jgleba.com/;
        proxy_http_version 1.1;

        # Allows websockets over HTTPS.
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        # Inform MeshCentral about the real host, port and protocol
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        }
}

# end. mesh.dg.jgleba~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

